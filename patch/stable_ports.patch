From 2b75f19893de74dcdfe9737ddb0c0198c9d6a6cf Mon Sep 17 00:00:00 2001
From: Krzysztof Lis <adynathos@gmail.com>
Date: Fri, 18 Nov 2016 18:16:04 +0100
Subject: [PATCH 1/2] Revert "[DEV] use dynamic commands udp ports"

Need stable ports to forward to VM.

This reverts commit a4f4ed13e00a9f00838e4103edabd76919d9639a.
---
 Sources/ARCONTROLLER_Network.c | 65 ++----------------------------------------
 1 file changed, 2 insertions(+), 63 deletions(-)

diff --git a/Sources/ARCONTROLLER_Network.c b/Sources/ARCONTROLLER_Network.c
index fd0a183..65cddad 100644
--- a/Sources/ARCONTROLLER_Network.c
+++ b/Sources/ARCONTROLLER_Network.c
@@ -35,12 +35,9 @@
  * @date 02/03/2015
  * @author maxime.maitre@parrot.com
  */
-
+ 
 #include <stdlib.h>
-#include <stdio.h>
-#include <errno.h>
-#include <unistd.h>
-#include <fcntl.h>
+
 #include <libARSAL/ARSAL_Print.h>
 #include <libARSAL/ARSAL_Socket.h>
 #include <libARSAL/ARSAL_Mutex.h>
@@ -63,57 +60,6 @@
  * Implementation
  *************************/
 
-static int ARCONTROLLER_Network_GetAvailableSocketPort(void)
-{
-    int fd, ret;
-    socklen_t addrlen;
-    struct sockaddr_in addr;
-    int yes;
-
-    fd = ARSAL_Socket_Create (AF_INET, SOCK_DGRAM, 0);
-    if (fd < 0)
-        goto error;
-
-    ret = fcntl(fd, F_SETFL, fcntl(fd, F_GETFL, 0) | O_NONBLOCK);
-    if (ret < 0)
-        goto error;
-
-    /*  bind to a OS-assigned random port */
-    memset(&addr, 0, sizeof(addr));
-    addr.sin_addr.s_addr = htonl(INADDR_ANY);
-    addr.sin_family = AF_INET;
-    addr.sin_port = htons (0);
-    ret = ARSAL_Socket_Bind(fd, (struct sockaddr *)&addr, sizeof(addr));
-    if (ret < 0) {
-        ARSAL_PRINT(ARSAL_PRINT_ERROR, ARCONTROLLER_NETWORK_TAG,
-                    "bind fd=%d, addr='0.0.0.0', port=0: error='%s'", fd, strerror(errno));
-        goto error;
-    }
-
-    /* get selected port */
-    addrlen = sizeof(addr);
-    ret = ARSAL_Socket_Getsockname(fd, (struct sockaddr *)&addr, &addrlen);
-    if (ret < 0) {
-        ARSAL_PRINT(ARSAL_PRINT_ERROR, ARCONTROLLER_NETWORK_TAG, "getsockname fd=%d, error='%s'", fd, strerror(errno));
-        goto error;
-    }
-
-    yes = 1;
-    ret = ARSAL_Socket_Setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof(yes));
-    if (ret < 0) {
-        ARSAL_PRINT(ARSAL_PRINT_ERROR, ARCONTROLLER_NETWORK_TAG, "Failed to set socket option SO_REUSEADDR: error=%d (%s)", errno, strerror(errno));
-        goto error;
-    }
-
-    ARSAL_PRINT(ARSAL_PRINT_INFO, ARCONTROLLER_NETWORK_TAG, "d2c_port port: %d", htons(addr.sin_port));
-    ARSAL_Socket_Close(fd);
-    return htons(addr.sin_port);
-error:
-    if (fd >= 0)
-        ARSAL_Socket_Close(fd);
-    return -1;
-}
-
 ARCONTROLLER_Network_t *ARCONTROLLER_Network_New (ARDISCOVERY_Device_t *discoveryDevice, ARCONTROLLER_Network_DisconnectionCallback_t disconnectionCallback, ARDISCOVERY_Device_ConnectionJsonCallback_t sendJsonCallback, ARDISCOVERY_Device_ConnectionJsonCallback_t receiveJsonCallback, void *customData, eARCONTROLLER_ERROR *error)
 {
     // -- Create a new Network Controller --
@@ -215,13 +161,6 @@ ARCONTROLLER_Network_t *ARCONTROLLER_Network_New (ARDISCOVERY_Device_t *discover
     if ((localError == ARCONTROLLER_OK) && 
         (ARDISCOVERY_getProductService (networkController->discoveryDevice->productID) == ARDISCOVERY_PRODUCT_NSNETSERVICE))
     {
-        // Override d2c_port
-        dicoveryError = ARDISCOVERY_Device_WifiSetDeviceToControllerPort(networkController->discoveryDevice, ARCONTROLLER_Network_GetAvailableSocketPort());
-        if (dicoveryError != ARDISCOVERY_OK)
-        {
-            localError = ARCONTROLLER_ERROR_INIT_DEVICE_JSON_CALLBACK;
-        }
-
         // Add callbacks for the connection json part
         dicoveryError = ARDISCOVERY_Device_WifiAddConnectionCallbacks (networkController->discoveryDevice, ARCONTROLLER_Network_OnSendJson, ARCONTROLLER_Network_OnReceiveJson, networkController);
         if (dicoveryError != ARDISCOVERY_OK)
-- 
2.7.4


From 20302010ad72648762b9ef437a1156b145ee35ce Mon Sep 17 00:00:00 2001
From: Krzysztof Lis <adynathos@gmail.com>
Date: Fri, 18 Nov 2016 18:16:27 +0100
Subject: [PATCH 2/2] Revert "[DEV] use dynamic stream2 udp ports"

Need stable stream port to receive stream in opencv.

This reverts commit 48588b56c7fa9d97c92aa7a0b57522b473eeac59.
---
 Sources/ARCONTROLLER_Stream2.c | 90 ++----------------------------------------
 Sources/ARCONTROLLER_Stream2.h |  2 -
 2 files changed, 4 insertions(+), 88 deletions(-)

diff --git a/Sources/ARCONTROLLER_Stream2.c b/Sources/ARCONTROLLER_Stream2.c
index 6a4c739..c294acf 100644
--- a/Sources/ARCONTROLLER_Stream2.c
+++ b/Sources/ARCONTROLLER_Stream2.c
@@ -35,12 +35,9 @@
  * @date 02/03/2015
  * @author maxime.maitre@parrot.com
  */
-
-#include <stdio.h>
+ 
 #include <stdlib.h>
-#include <errno.h>
-#include <unistd.h>
-#include <fcntl.h>
+
 #include <json/json.h>
 #include <libARSAL/ARSAL_Print.h>
 #include <libARSAL/ARSAL_Socket.h>
@@ -71,65 +68,10 @@ static eARSTREAM2_ERROR ARCONTROLLER_Stream2_GetAuBufferCallback(uint8_t **auBuf
 static eARSTREAM2_ERROR ARCONTROLLER_Stream2_AuReadyCallback(uint8_t *auBuffer, int auSize, uint64_t auTimestamp, uint64_t auTimestampShifted, eARSTREAM2_H264_FILTER_AU_SYNC_TYPE auSyncType, void *auMetadata, int auMetadataSize, void *auUserData, int auUserDataSize, void *auBufferUserPtr, void *userPtr);
 static void *ARCONTROLLER_Stream2_RestartRun (void *data);
 
-#define ARCONTROLLER_STREAM2_TAG "ARCONTROLLER_Stream2"
-
 /*************************
  * Implementation
  *************************/
 
-static int ARCONTROLLER_Stream2_Open_Socket(const char *name, int *sockfd, int *port)
-{
-    int fd, ret;
-    socklen_t addrlen;
-    struct sockaddr_in addr;
-    int yes;
-
-    fd = ARSAL_Socket_Create (AF_INET, SOCK_DGRAM, 0);
-    if (fd < 0)
-        goto error;
-
-    ret = fcntl(fd, F_SETFL, fcntl(fd, F_GETFL, 0) | O_NONBLOCK);
-    if (ret < 0)
-        goto error;
-
-    /*  bind to a OS-assigned random port */
-    memset(&addr, 0, sizeof(addr));
-    addr.sin_addr.s_addr = htonl(INADDR_ANY);
-    addr.sin_family = AF_INET;
-    addr.sin_port = htons (0);
-    ret = ARSAL_Socket_Bind(fd, (struct sockaddr *)&addr, sizeof(addr));
-    if (ret < 0) {
-        ARSAL_PRINT(ARSAL_PRINT_ERROR, ARCONTROLLER_STREAM2_TAG,
-                    "bind fd=%d, addr='0.0.0.0', port=0: error='%s'", fd, strerror(errno));
-        goto error;
-    }
-
-    /* get selected port */
-    addrlen = sizeof(addr);
-    ret = ARSAL_Socket_Getsockname(fd, (struct sockaddr *)&addr, &addrlen);
-    if (ret < 0) {
-        ARSAL_PRINT(ARSAL_PRINT_ERROR, ARCONTROLLER_STREAM2_TAG, "getsockname fd=%d, error='%s'", fd, strerror(errno));
-        goto error;
-    }
-
-    yes = 1;
-    ret = ARSAL_Socket_Setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof(yes));
-    if (ret < 0) {
-        ARSAL_PRINT(ARSAL_PRINT_ERROR, ARCONTROLLER_STREAM2_TAG, "Failed to set socket option SO_REUSEADDR: error=%d (%s)", errno, strerror(errno));
-        goto error;
-    }
-
-    ARSAL_PRINT(ARSAL_PRINT_INFO, ARCONTROLLER_STREAM2_TAG, "udp local port %s: %d", name, htons(addr.sin_port));
-    *port = htons(addr.sin_port);
-    *sockfd = fd;
-    return 0;
-error:
-    if (fd >= 0)
-        ARSAL_Socket_Close(fd);
-
-    return -1;
-}
-
 ARCONTROLLER_Stream2_t *ARCONTROLLER_Stream2_New (ARDISCOVERY_Device_t *discoveryDevice, eARCONTROLLER_ERROR *error)
 {
     // -- Create a new Stream 2 Controller --
@@ -137,7 +79,6 @@ ARCONTROLLER_Stream2_t *ARCONTROLLER_Stream2_New (ARDISCOVERY_Device_t *discover
     //local declarations
     eARCONTROLLER_ERROR localError = ARCONTROLLER_OK;
     ARCONTROLLER_Stream2_t *stream2Controller =  NULL;
-    int ret;
     
     // Check parameters
     if (discoveryDevice == NULL)
@@ -167,14 +108,8 @@ ARCONTROLLER_Stream2_t *ARCONTROLLER_Stream2_New (ARDISCOVERY_Device_t *discover
 #endif
             }
             
-            ret = ARCONTROLLER_Stream2_Open_Socket("stream", &stream2Controller->clientStreamFd, &stream2Controller->clientStreamPort);
-            if (ret < 0)
-                localError = ARCONTROLLER_ERROR_INIT_NETWORK_CONFIG;
-
-            ret = ARCONTROLLER_Stream2_Open_Socket("control", &stream2Controller->clientControlFd, &stream2Controller->clientControlPort);
-            if (ret < 0)
-                localError = ARCONTROLLER_ERROR_INIT_NETWORK_CONFIG;
-
+            stream2Controller->clientStreamPort = ARCONTROLLER_STREAM2_CLIENT_STREAM_PORT;
+            stream2Controller->clientControlPort = ARCONTROLLER_STREAM2_CLIENT_CONTROL_PORT;
             stream2Controller->serverStreamPort = 0;
             stream2Controller->serverControlPort = 0;
             stream2Controller->maxPaquetSize = 0;
@@ -231,12 +166,6 @@ void ARCONTROLLER_Stream2_Delete (ARCONTROLLER_Stream2_t **stream2Controller)
             free ((*stream2Controller)->parmeterSets);
             (*stream2Controller)->parmeterSets = NULL;
             
-            if ((*stream2Controller)->clientStreamFd >= 0)
-                ARSAL_Socket_Close((*stream2Controller)->clientStreamFd);
-
-            if ((*stream2Controller)->clientControlFd >= 0)
-                ARSAL_Socket_Close((*stream2Controller)->clientControlFd);
-
             free (*stream2Controller);
             (*stream2Controller) = NULL;
         }
@@ -569,17 +498,6 @@ static eARCONTROLLER_ERROR ARCONTROLLER_Stream2_StartStream (ARCONTROLLER_Stream
             net_config.serverControlPort = stream2Controller->serverControlPort;
             net_config.clientStreamPort = stream2Controller->clientStreamPort;
             net_config.clientControlPort = stream2Controller->clientControlPort;
-
-            if (stream2Controller->clientStreamFd >= 0) {
-                ARSAL_Socket_Close(stream2Controller->clientStreamFd);
-                stream2Controller->clientStreamFd = -1;
-            }
-
-            if (stream2Controller->clientControlPort >= 0) {
-                ARSAL_Socket_Close(stream2Controller->clientControlPort);
-                stream2Controller->clientControlPort = -1;
-            }
-
             if (stream2Controller->qos_level == 1)
             {
                 net_config.classSelector = ARSAL_SOCKET_CLASS_SELECTOR_CS4;
diff --git a/Sources/ARCONTROLLER_Stream2.h b/Sources/ARCONTROLLER_Stream2.h
index 4d37ac0..8bd072c 100644
--- a/Sources/ARCONTROLLER_Stream2.h
+++ b/Sources/ARCONTROLLER_Stream2.h
@@ -77,9 +77,7 @@ struct ARCONTROLLER_Stream2_t
     char serverAddress[ARCONTROLLER_STREAM2_IP_SIZE]; /**< Server address */
     struct mux_ctx *mux;
     int clientStreamPort; /**< Client stream port */
-    int clientStreamFd; /**< Client stream fd */
     int clientControlPort; /**< Client control port */
-    int clientControlFd; /**< Client control fd */
     int serverStreamPort; /**< Server stream port */
     int serverControlPort; /**< Server control port */
     int maxPaquetSize; /**< Maximum network packet size in bytes */
-- 
2.7.4

